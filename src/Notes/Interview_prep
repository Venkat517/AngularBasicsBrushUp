1) What is Angular
Angular is a javascript binding framework which binds html(view) and javascript(model), Also it helps to build SPA's using the concept of routing.

2) What is a directive?
Directives are angular syntaxes inside the html which will helps to attach/change the behavior of HTML DOM.

3) how many directives are there?
There are 3 types of directives, they are (S A C)
  - Structural directives
    Change the structure of a HTML DOM elements by adding or removing the elements.
    eg: *ngFor="let ele of elements" {{ele}}
        *ngIf="let ele of elements" {{ele}}

  - Attribute directives
    Change the appearance and behavior of a HTML elements.
    eg: <div [hidden]="Hide()">

  - Component directives
    A custom directive(user control)

4) What is npm and node_modules folder in the angular.js folder?
Npm is a package manager where makes intallation of any javascript, node_modules is the folder where all the packages where installed.

5) What is package.Json file?
It has all the javascript references which is required to run the project.

6) What is typescript and why do we need it?
It is a superset of javascript and it adds types to javascript, It also gives oops environment and later compiles to Js
and it is strongly typed language so that we can catch errors at compile time.

7) What is Angular CLI and why do we need this?
Helps to create a readymade angular project when u can work on for the project
ng new myApp

8) What is the importance of component and module in the angular?
  Component - where it binds the view(UI) and model(JS)
  module - where its groups multiple components and connects logically.

9) What is a decorater?
it defines what kind of angular class it is? for eg if its a @Component then its a angular component and if it is a @NGModule then its a module.

10) What are annotations or Metadata?
same a Q9

11) What is a template?
Template is an HTML view where we write the directives and there are 2 ways to define 1)Inline and 2)External.

12) What are different types of data binding in angular?
It defines as how data is communicated betweent the view and the component
There are four types of data binding, they are
  (i) Interpolation/Expression : Data flows from component to view and that is embedded in html tags using {{ }}
  (ii) Property binding: Data flows froms component to view and represents using []
  (iii) event binding: Data flows from view to component and represents using ()
  (iv) Two way binding: Data flows from view to component and component to view and represents using [()]

13) Explain the Angular Architecture ?
  (1) Template: HTML view of an angular
  (2) Component: Binds the view and model
  (3) Modules: Groups the components
  (4) Bindings: define how data is communicated between components and view
  (5) Directives: changes the HTML DOM behaviour
  (6) Services: helps to share the common logic across the project
  (7) DI: helps to inject the instance across the construtor.

14) What is SPA in angular?
  It loads only the single web document and then updates the contents as per user demand.

15) How to implement the single page application in the angular?
    This can be acheived by using the concept called routing. Now Routing is used to navigate from one page to another.
  It consits of 2 things, one is URL and 2nd is when this URL is called which component should be loaded.

16) How to implement Routing?
  (1) define the routing collection where we define which component should be load for particular route
  (2) we need to have the <router-outlet> where excatly our page should load.
  (3) we have to define the routerlink in the html  <a [routerlink]> = "['home']"> Home </a>

17) What exactly is lazy loading?
 it is called as on demand loading which is essential like HTML, CSS and JS. Thus we can acheive better performance.

18) How to implement Lazy loading in angular?
(1) divide the project into separete modules
(2) use the load children in the routes collection of that particular modules.

19) What are services?
  use to share the common functionality across the project.

20) What is dependency injection?
  DI is a design pattern, where rather than creating the object instance with the component, Angular will inject via constructor.

21) How do we implement dependency injection?
  (1) In the module, inside NgModule decorater, we have providers collection where we provide for particular class what instance should be injected

  providers: [
    {provide: Baselogger, useClass: HttpLogger},
  ]

 // in component
  constructor(public bl: Baselogger){
    this.bl.log();
  }

22) What is benefit of using dependency injection?
  helps to decouple the class dependencies, so that when we need to add new dependencies we dont have to change every where else.

23) what is the difference between ngserve and ngbuild?
  ngserve build the angular application inside the RAM where as ngbuild builds inside the harddisk, for productions we use ngbuild.

24) Explain --prod parameter in ng build?
it will make ready for productions where it removes all unnecessary things and tries to make most compress code.

// Advanced topic //

25) Explain View child and view childeren?
View child helps to reference view object to the component and that view object can be component, directive or simple html ele.
where as View children helps to reference the collection of view objects to the component.

eg - consider the view below as

case i - <div #div1> This is a div1> </div>
case ii - <comp2>
            <p> this is p1 </p>
            <p1 class="s1"> this is p1 with class s1 </p>
            <p2 class="s2"> this is p2 with class s2 </p>
          </comp2>
case iii - <comp2>
            <p> this is p2 </p>
          </comp2>

eg - consider the template below as

export class comp2 {
  @viewchild('div1', {static:false}) divref : ElementRef

  @viewchild(comp2, {static:false}) tref1: comp2

  @viewchildren(comp2) myComponents: QueryList<comp2>

}

in case i, temp ref variable #div1 is referenced by viewchild (single view object)

in case ii, comp2 is refereced by viewchild (single view object)

in case iii, comp2 collection is referenced by viewchildren (collection view object).

26) Why do we need Template reference variable?
  Template reference variable helps to refers the htmlDOM element, a component, directive ..etc

eg: case i - we will refer by using # and name of variable. now we can use in the same view as

  {{ div1.textcontent}}
